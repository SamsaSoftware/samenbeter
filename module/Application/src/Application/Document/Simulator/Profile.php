<?php
namespace Application\Document\Simulator;

use Application\Document\Model;
use Application\Document\Indexer;
use Application\Document\UserTemplate;
use phpDocumentor\Reflection\DocBlock\Tags\PropertyRead;

class Profile extends Model
{

    // public $sfriends = array();
    public $modelprofiles = array();

    public $name;

    public $value;

    public $isvisible = true;

    public $prottectedattribute = false;

    public static function getRelationType($name)
    {
        $relations = array();
        // $relations['modelprofiles'] = Model::ONE_TO_MANY;
        return self::getRelationFromArray($name, $relations);
    }

    public function getRelationDetails($name)
    {
        $simplerelations = array();
        return parent::getRelationRefFromArray($name, $simplerelations); // TODO: Change the autogenerated stub
    }

    public function openPV()
    {
        // return strng
    }

    /**
     * $json====>>>Array
    (
    [name] => Name
    [value] => Raluca1
    [recid] => 5c0a48b479460d3e701504f0
    )
     * @param bool $json
     * When the profile is changed then check and update the ProfileTemplate  tags used for a Group
     */
    public function updateSet($json, &$state = null, $forceStopPropagation = false)
    {
        parent::updateSet($json);
        //after the attribute was edited get the corespondent Profile Template


        if(!isset($json['recid'])) return true;
        if($json['recid']=='') return true;

        $idProfileChanged = $json['recid'];
        $valueProfileChanged = $json['value'];

        //1. get actual ProfileObject with all details
        $oProfile = $this->getInstance("Profile", $idProfileChanged);

        //2. get parent object (Groupmodelprofiles)
        $oGroupModelProfile = $oProfile->getParent();


        if($oGroupModelProfile!=''){
            //3. get all values and merge them
            $sNewTagValue = '';
            foreach($oGroupModelProfile->profiles as $oneProfileExisting){

                $oProfileExisting = $this->getInstance("Profile", $oneProfileExisting['$id']);
                $sNewTagValue .= ' '.$oProfileExisting->value;

            }

            //4. Update for this GroupModelProfiles the tag field
            $oGroupModelProfile->tags = $sNewTagValue;
            $oGroupModelProfile->update();
        }


    }




}