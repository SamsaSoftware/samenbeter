<?php
namespace Application\Document\Simulator;

use Application\Document\Model;
use Application\Document\Indexer;
use Application\Document\UserTemplate;

class Modelprofile extends Model
{

    //    public $sfriends = array();
        public $profiles = array();
    public $requests = array();
    public $groups = array();
    public $groupmodelprofiles = array();
    public $name;


    public static function getRelationType($name)
    {
                $relations = array();
                $relations['profiles'] = Model::OWNING_ONE_TO_MANY;
                $relations['requests'] = Model::MANY_TO_ONE;
                $relations['groups'] = Model::ONE_TO_MANY;
                $relations['groupmodelprofiles'] = Model::ONE_TO_MANY;
                return self::getRelationFromArray($name, $relations);
    }

    public function getRelationDetails($name)
    {
                $simplerelations = array();

                return parent::getRelationRefFromArray($name, $simplerelations); // TODO: Change the autogenerated stub
    }

    public function copyAttributes(){
                $this->copyset('getParent.getProfileattribute','Profile');
            }

    public function openPV(){
                //return strng
            }

    public static function getPK() {
                return 'name';
    }

    /* used if you want to deledete the profile from "Profile template" menu, after you choose a template */
    public function remove($object, $softRemove = true, $noPropagation = false)
    {
        if($object instanceof Profile){
            if($object->prottectedattribute == true){
                return 'Protected attribute can\'t be deleted';
            }
        }
        parent::remove($object, $softRemove, $noPropagation);
    }

}